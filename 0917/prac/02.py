# # 실습1. while문 연습문제
# # ★ 문제1. 비밀 코드 맞추기(1)
# # 비밀 모임에 입장하려면 올바른 비밀 코드를 입력해야 합니다.
# # 아래의 요구사항을 만족하는 코드를 작성하세요.

# # 조건
# # ■ 변수 secret_code에는 "codingonre3"라는 문자열이 저장되어 있습니다.
# # ■ 사용자에게 "비밀 코드를 입력하세요:" 라고 안내 문구를 출력합니다.
# # ■ 사용자가 입력한 코드가 secret_code와 다를 경우, 계속해서 다시 입력 받습니다.
# # ■ 코드가 맞으면 "입장이 허용되었습니다!" 를 출력하고 프로그램을 종료합니다.

# # 비밀 코드를 입력하세요: 가나다
# # 비밀 코드가 틀렸습니다. 다시 시도하세요.
# # 비밀 코드를 입력하세요: 123
# # 비밀 코드가 틀렸습니다. 다시 시도하세요.
# # 비밀 코드를 입력하세요: 화이팅아자아자
# # 비밀 코드가 틀렸습니다. 다시 시도하세요.
# # 비밀 코드를 입력하세요: codingonre3
# # 입장 완료! 환영합니다.

# import random
# secret_code = 'codingonre3'

# while secret_code != input('비밀코드를 입력하세요:'):
#     print('비밀 코드가 틀렸습니다. 다시 시도하세요.')

# print('입장 완료! 환영합니다.')

# # ★ 문제2. 업다운 게임
# # 컴퓨터가 1부터 100 사이의 무작위 정수 하나를 미리 정해 놓았습니다.
# # 사용자는 이 수를 맞힐 때까지 계속해서 숫자를 입력해야 합니다.

# # 조건
# # ■ 입력한 숫자가 정답보다 크면: "입력한 숫자보다는 작아요."
# # ■ 입력한 숫자가 정답보다 작으면: "입력한 숫자보다는 커요."
# # ■ 숫자를 맞히면: "{입력 횟수}번 만에 정답을 맞췄습니다." 라고 출력합니다.

# # 랜덤 숫자 (1부터 100 사이의 무작위 정수)
# random_value = random.randrange(1, 101)

# # 초기값
# n = 0
# count = 0

# while random_value != n:
#     n = int(input('1부터 100 사이 숫자를 입력해 주세요:'))
#     count += 1

#     if n < random_value:
#         print('입력한 숫자보다는 커요.')
#     else:
#         print('입력한 숫자보다는 작아요.')


# print(f'{count} 만에 정답을 맞췄습니다!')


# ★문제1. 비밀 코드 맞추기(2)
# 비밀 모임에 입장하려면 올바른 비밀 코드를 입력해야 합니다.
# 정답을 입력할 때까지 무한히 반복되며,
# 정확한 코드를 입력하면 루프를 탈출합니다.

# 조건
# ■ 변수 secret_code에는 "codingonre3"가 저장되어 있습니다.
# ■ 사용자에게 "비밀 코드를 입력하세요:" 라고 안내 문구를 출력합니다.
# ■ 정답이 맞을 때까지 계속 입력을 받습니다.
# ■ 사용자의 입력이 정답과 일치하면 "입장 완료! 환영합니다."를 출력하고 break로 루프를 종료하세요.
# ■ 정답이 틀렸다면 "비밀 코드가 틀렸습니다. 다시 시도하세요."를 출력한 후 루프를 계속 진행합니다.

# secret_code = "codingonre3"
# code = ""

# while code != secret_code:
#     code = input('비밀 코드를 입력하세요.:')
#     if code == secret_code:
#         print('입장 완료! 환영합니다.')
#         break
#     else:
#         print('비밀 코드가 틀렸습니다. 다시 시도하세요.')


# # ★ 문제2. 유효한 나이만 평균 내기
# # 사용자에게 총 5명의 나이를 입력 받아야 합니다.
# # 유효한 나이들만 평균을 내어 출력하세요.

# # 조건
# # ■ 변수 times는 유효한 입력의 개수를 셉니다.
# # ■ 변수 sum_age는 나이의 합계를 저장합니다.
# # ■ 나이는 정수로 입력 받습니다.
# # ■ 나이가 0 이하이거나 120보다 크면 무시하고 반복을 건너뜁니다.
# # ■ 5개의 유효한 나이를 입력 받으면 루프를 종료하고, 총합과 평균을 출력합니다.

# times = 0
# sum_age = 0

# while times < 5:
#     age = int(input('나이를 입력하세요.'))
#     if 0 < age <= 120:
#         sum_age += age
#         times += 1
#     else:
#         print('잘못된 나이 입니다. 다시 입력해 주세요.')

# avg = sum_age / 5

# print(f'총 나이 합계는 {sum_age}, 평균은 {avg:.0f} 입니다.')


# 실습3. 중첩 while문 연습문제

# ★문제1. 로그인 시스템 구현
# 로그인 시스템을 만들고 있습니다.
# 순서대로 ID와 비밀번호를 입력 받고,
# ID와 비밀번호 모두 맞으면 로그인 성공 메시지를 출력하세요.

# 조건
# ■ 임의의 ID와 비밀번호를 세팅합니다.
# ■ 잘못된 ID일 경우 "ID가 존재하지 않습니다." 를 출력하고 다시 ID를 입력 받습니다.
# ■ ID가 맞으면 비밀번호를 입력 받고,
#  비밀번호가 틀리면 "비밀번호가 틀렸습니다." 를 출력하고 다시 입력 받습니다.
# ■ 둘 다 맞으면 "로그인 성공!" 을 출력하고 프로그램을 종료합니다

saved_id = 'admin'
saved_pw = 'admin123'

input_id = ''
input_pw = ''

while True:
    input_id = input('ID를 입력하세요:')

    if saved_id == input_id:
        while True:
            input_pw = input("PW를 입력하세요:")
            if saved_pw == input_pw:
                print('로그인 성공!')
                break  # PW while문 탈출
            else:
                print('비밀번호가 틀렸습니다.')
        break  # ID while문 탈출
    else:
        print('ID가 존재하지 않습니다.')
